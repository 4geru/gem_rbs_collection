module ULID
  module Generator
    # Crockford's Base32
    ENCODING: Array[Integer]

    RANDOM_BYTES: ::Integer

    ENCODED_LENGTH: ::Integer

    BIT_LENGTH: ::Integer

    BITS_PER_B32_CHAR: ::Integer

    ZERO: ::Integer

    MASK: ::Integer

    def generate: (?Time time) -> String

    def generate_bytes: (?Time time) -> String

    private

    def encode: (Integer input, Integer length) -> untyped

    def octo_word: (?Time time) -> Integer

    def time_48bit: (?Time time) -> String

    def random_bytes: () -> String
  end

  extend Generator

  VERSION: String
end
